// lib/models/session_analysis.dart

/// Represents a deep, final analysis of a user's completed reflection session.
///
/// This object is generated by the RecommendationService by sending all the user's
/// session data to the AI. It serves as the basis for displaying detailed
/// insights and actionable suggestions on the RecommendationsScreen.
class SessionAnalysis {
  /// The AI's detailed analysis of the user's anxiety levels.
  final MentalState anxiety;

  /// The AI's detailed analysis of the user's depression levels.
  final MentalState depression;

  /// The AI's detailed analysis of the user's stress levels.
  final MentalState stress;

  /// A list of core negative thoughts or cognitive distortions identified by the AI.
  final List<String> keyNegativeThoughts;

  /// A list of alternative, more balanced thoughts to counter the negative ones.
  final List<String> positiveReframes;

  /// A list of concrete, actionable steps the user can take.
  final List<String> suggestedActions;

  SessionAnalysis({
    required this.anxiety,
    required this.depression,
    required this.stress,
    required this.keyNegativeThoughts,
    required this.positiveReframes,
    required this.suggestedActions,
  });

  /// A factory constructor to create a SessionAnalysis instance from a JSON map
  /// that is returned by the AI. This is the primary way this object is created.
  factory SessionAnalysis.fromJson(Map<String, dynamic> json) {
    // A safe helper function to parse lists from the JSON.
    // It handles cases where the API might not return a list as expected.
    List<String> _parseList(dynamic list) {
      if (list is List) {
        // Convert all items to string just in case they are not already.
        return List<String>.from(list.map((item) => item.toString()));
      }
      return []; // Return an empty list if the data is null or not a list.
    }
    
    return SessionAnalysis(
      // Safely access nested JSON objects, providing an empty map as a fallback.
      anxiety: MentalState.fromJson(json['analysis']?['anxiety'] ?? {}),
      depression: MentalState.fromJson(json['analysis']?['depression'] ?? {}),
      stress: MentalState.fromJson(json['analysis']?['stress'] ?? {}),
      
      // Use the safe parsing helper for all list-based properties.
      keyNegativeThoughts: _parseList(json['summary']?['key_negative_thoughts']),
      positiveReframes: _parseList(json['summary']?['positive_reframes']),
      suggestedActions: _parseList(json['summary']?['suggested_actions']),
    );
  }
}

/// Represents the analyzed state of a single mental health component (e.g., Anxiety, Stress).
class MentalState {
  /// The severity level determined by the AI (e.g., "Mild", "Moderate").
  final String severity;

  /// The justification or evidence from the user's text that the AI used
  /// to determine the severity rating.
  final String evidence;

  MentalState({required this.severity, required this.evidence});

  /// A factory constructor to create a MentalState instance from a JSON map.
  factory MentalState.fromJson(Map<String, dynamic> json) {
    return MentalState(
      // Provide default values to prevent errors if the API response is incomplete.
      severity: json['severity'] ?? 'Not assessed',
      evidence: json['evidence'] ?? 'No specific evidence found.',
    );
  }
}